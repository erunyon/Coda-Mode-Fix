<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "syntax.dtd">

<syntax>
    <head>
        <name>CSS</name>
        <!-- The definitions title -->
        <charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-@$]]></charsintokens>
        <charsincompletion><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-@$]]></charsincompletion>
    </head>
    <states>
        <default id="Base" scope="meta.default">
        	
			<state id="CSS Functions" type="string" useforautocomplete="no" scope="meta.default">
				<begin>
					<regex>(?i)(?&lt;![#\d\w-])(?:url|local|format)\s*\(</regex>
				</begin>
				<end>
					<regex>(\)|(?'unwindend'}))</regex>
				</end>
				
				<keywords id="Function Keywords" casesensitive="no" useforautocomplete="yes" scope="language.function.css">
					<string>url</string>
					<string>local</string>
					<string>format</string>
				</keywords>
				
				<state-link state="AutodocComment"/>
				<state-link state="Comment"/>
				<state-link state="String"/>
				<state-link state="SingleString"/>
				
				<!-- handle php -->
				<state-link state="PHP" mode="PHP-HTML" />
				
				<!-- need to handle brackets in urls for sass #21362 -->
				 <state id="Curly brackets in Functions" type="string" scope="meta.default">
					<begin>
						<string>{</string>
						<autoend>}</autoend>
					</begin>
					<end>
						<regex>}</regex>
					</end>
					
					<state-link state="AutodocComment"/>
					<state-link state="Comment"/>
					<state-link state="String"/>
					<state-link state="SingleString"/>
				
				</state>

			</state>        	
	
			<state id="Type Selectors" scope="meta.block">
				<begin><regex>\[</regex></begin>
				<end><regex>(\]|(?'unwindend'[\}\{]))</regex></end>
				
				<keywords id="Attribute" useforautocomplete="no" scope="style.value.keyword">
					<regex>([^\[\]=]+)</regex>
				</keywords>
				
				<keywords id="Value" useforautocomplete="no" scope="style.value.string">
					<regex>=\s*([^\[\]]+)</regex>
				</keywords>
				
				<state-link state="String"/>
				<state-link state="SingleString"/>
				
			</state>
			
			<state id="Digits and Colors" containerState="yes" scope="meta.default">
				<keywords id="CSS Digits" useforautocomplete="yes" scope="style.value.numeric">
					<regex>(?&lt;![A-Za-z0-9#\\_-])(-?[\d]+[ \t]*(?:px|pt|em|ex|cm|in|mm|pc|s|ms|Hz|kHz|%|deg|rad|grad|turn|rem|ch|vw|vh|vmin|vmax|x)?)</regex>
				</keywords>
				<keywords id="CSS Colors" useforautocomplete="yes" scope="style.value.color.rgb-value">
					<regex>(?&lt;![A-Za-z0-9-#\\_-])(#[\da-fA-F]{3,6})\b</regex>
				</keywords>
			</state>
			                			
			<keywords id="Rule Keywords" casesensitive="no" useforautocomplete="yes" scope="style.at-rule">
				<string>@import</string>
				<string>@media</string>
				<string>@screen</string>
				<string>@page</string>
				<string>@charset</string>
				<string>@keyframes</string>
				<string>@region</string>
				<string>@supports</string>
				<string>@font-face</string>
				<string>@namespace</string>
				<string>@viewport</string>
				<regex>(@top-[\w-]+)\b</regex>
				<regex>(@bottom-[\w-]+)\b</regex>
				<regex>(@left-[\w]+)\b</regex>
				<regex>(@right-[\w]+)\b</regex>
				<regex>(@(?:-webkit|-ms|-moz|-o)-[\w-]+)\b</regex>
			</keywords>
        	
        	<keywords id="Pseudo Classes" casesensitive="no" useforautocomplete="yes" scope="style.value.keyword">
				<regex>:((?:link|visited|active|hover|focus|first-[\w-]+|before|after|lang|last-[\w-]+|only-[\w-]+|nth-[\w-]+|root|empty|target|enabled|disabled|checked|not))</regex>
				<regex>::((?:selection|-(?:webkit|khtml|moz|o|ms)-[\w-]+))</regex>
        	</keywords>
        	
            <state id="Inside curly brackets" foldable="yes" indent="yes" scope="meta.block.curly">
                <begin>
                    <string>{</string>
                    <autoend>}</autoend>
                </begin>
                <end>
                    <regex>}</regex>
                </end>
                <keywords id="CSS Keywords" useforautocomplete="yes" casesensitive="no" scope="style.property.name">
                    
                    <regex>(?&lt;![\d\w.\-#@:\$])(_(?:background|filter))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(-(?:webkit|khtml|moz|o|ms)-[\w-]+)\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(a(?:lignment-\w+|lign-\w+|nimation(?:-\w+)*|ppearance|zimuth))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(b(?:ackground(?:-\w+)*|ackface-visibility|aseline-shift|inding|ookmark-\w+|order(?:-\w+)*|ottom|ox-[\w-]+))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(c(?:aption-side|lear|lip(?:-\w+)*|olor(?:-\w+)*|olumn-[\w-]+|olumns(?:-\w+)*|ontent|ounter-increment|ounter-reset|rop|ue-after|ue-before|ue|ursor))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(d(?:irection|isplay(?:-\w+)*|ominant-baseline|rop-initial-\w+))\b</regex>                    
					<regex>(?&lt;![\d\w.\-#@:\$])(e(?:levation|mpty-cells|nable-background))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(f(?:ill|it|ilter|lex(?:-\w+)*|loat|lood|ont)(?:-\w+)*)\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(g(?:lyph-orientation-\w+|rid-\w+|roup-reset))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(h(?:anging-puctuation|eight|yphenate-\w+|yphens))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(i(?:cons|mage-\w+|nline-box-align))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(j(?:ustify-content))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(k(?:erning|ey-equivalent|onq_bgpos_x|onq_bgpos_y))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(l(?:ayer-background-color|ayer-background-image|ayout-\w+|eft|etter-spacing|ighting-color|ine-\w+|ist-style(?:-\w+)*))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(m(?:argin(?:-\w+)*|arks|arker(?:-\w+)*|ark(?:-\w+)*|ask(?:-\w+)*|arquee-\w+|ax-height|ax-width|in-height|in-width|ove-to))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(n(?:av-down|av-index|av-left|av-right|av-up))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(o(?:pacity|rder|rphans|utline(?:-\w+)*|verflow-x|verflow-y|verflow))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(p(?:adding(?:-\w+)*|age(?:-\w+)*|ause-after|ause-before|ause|honemes|itch-range|itch|lay-during|ointer-events|osition|resentation-level|unctuation-trim|erspective(?:-\w+)*))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(quotes)\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(r(?:endering-indent|esize|est(?:-\w+)*|ichness|ight|otation(?:-\w+)*|uby-\w+))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:])(s(?:rc|ize|hape-rendering|peak-header|peak-numeral|peak-punctuation|peak|peech-rate|top-\w+|tress|tring-set|troke(?:-\w+)*))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(t(?:ab-size|ab-index|able-layout|ext-[\w-]+|oggle-group|op|ransition(?:-[\w-]+)*|ransform(?:-[\w-]+)*))\b</regex> 
                    <regex>(?&lt;![\d\w.\-#@:\$])(u(?:nicode-bidi|nicode-range|ser-focus|ser-input|ser-modify|ser-select))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(v(?:ertical-align|isibility|oice-\w+|olume))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(w(?:hite-space|idows|idth|ord-break|ord-spacing|ord-wrap|riting-mode))\b</regex>
                    <regex>(?&lt;![\d\w.\-#@:\$])(z(?:-index|oom))\b</regex>
                    
                </keywords>
                
       			<import state="Digits and Colors" keywords-only="yes" />
                
                <state id="Attribute state" scope="meta.block.attribute">
                    <begin>
						<regex>:(?i)(?!(?:link|visited|active|hover|focus|first-|before|after|lang|last-|only-|nth-|root|empty|target|enabled|disabled|checked|not|:))</regex>
                    </begin>
                    <end>
                        <!--<regex>(;|.(?=})|[\n\r])</regex> Coda #17819-->
                        <regex>(;|(?'unwindend'[{}]))</regex>
                    </end>
                    
                    <state-link state="CSS Functions" />
                    
                    <!-- color Functions -->
                    <keywords id="CSS Color Functions" casesensitive="no" scope="support.function">
						<regex>\b(rgb|rgba|hsl|hsla|cmyk|device-cmyk)\s*\(</regex>
                    </keywords>
                    
					<!--
					<state id="CSS Color Functions" useforautocomplete="no" scope="meta.default">
                    	<begin>
                    		<regex>(?i)(?&lt;=(?:rgb|rgba|hsl|hsla|cmyk|device-cmyk))\s*\(</regex>
                    	</begin>
                    	<end>
                    		<regex>(\)|(?'unwindend'}))</regex>
                    	</end>

                    	<state-link state="AutodocComment"/>
						<state-link state="Comment"/>
                    	<import state="Digits and Colors" keywords-only="yes" />
                    </state>
                    -->
                    
                    
                    <keywords id="!important" useforautocomplete="no" scope="meta.important">
                        <regex>(!\s*important)</regex>
                    </keywords>
                    <keywords id="CSS Attributes" useforautocomplete="yes" casesensitive="no" scope="style.value.keyword">
                    	<regex>(?&lt;![\d\w.\-#@\$])(-(?:webkit|moz|ms|o)-[\w-]+)</regex>
               			<string>above</string>
						<string>absolute</string>
						<string>accumulate</string>
						<string>activeborder</string>
						<string>activecaption</string>
						<string>after-edge</string>
						<string>after-white-space</string>
						<string>ahead</string>
						<string>alias</string>
						<string>aliceblue</string>
						<string>all-scroll</string>
						<string>all</string>
						<string>alphabetic</string>
						<string>alternate</string>
						<string>always</string>
						<string>antialiased</string>
						<string>antiquewhite</string>
						<string>appworkspace</string>
						<string>aqua</string>
						<string>aquamarine</string>
						<string>arial</string>
						<string>armenian</string>
						<string>aspect-ratio</string>
						<string>auto</string>
						<string>avoid</string>
						<string>azure</string>
						<string>background</string>
						<regex>(?&lt;![\d\w.\-#@\$])(background-[\w-]+)</regex>
						<string>backwards</string>
						<string>balance</string>
						<string>baseline</string>
						<string>before-edge</string>
						<string>beige</string>
						<string>below</string>
						<string>bicubic</string>
						<string>bidi-override</string>
						<string>bisque</string>
						<string>black</string>
						<string>blanchedalmond</string>
						<string>blink</string>
						<string>block</string>
						<string>blue</string>
						<string>blueviolet</string>
						<string>bold</string>
						<string>bolder</string>
						<string>border</string>
						<regex>(?&lt;![\d\w.\-#@\$])(border-[\w-]+)</regex>
						<string>both</string>
						<string>bottom</string>
						<string>box</string>
						<string>box-shadow</string>
						<string>break-all</string>
						<string>break-strict</string>
						<string>break-word</string>
						<string>break</string>
						<string>brown</string>
						<string>burlywood</string>
						<string>butt</string>
						<string>button-bevel</string>
						<string>button</string>
						<string>buttonface</string>
						<string>buttonhighlight</string>
						<string>buttonshadow</string>
						<string>buttontext</string>
						<string>cadetblue</string>
						<string>capitalize</string>
						<string>capitals</string>
						<string>caps-height</string>
						<string>caption</string>
						<string>captiontext</string>
						<string>caret</string>
						<string>cell</string>
						<string>center</string>
						<string>central</string>
						<string>charcoal</string>
						<string>chartreuse</string>
						<string>checkbox</string>
						<string>chicago</string>
						<string>chocolate</string>
						<string>circle</string>
						<string>cjk-ideographic</string>
						<string>clip</string>
						<string>close-quote</string>
						<string>closest-side</string>
						<string>closest-corner</string>
						<!--<string>cmyk</string>-->					
						<string>col-resize</string>
						<string>collapse</string>
						<string>collapsed</string>
						<string>color</string>
						<string>color-index</string>
						<string>color-stop</string>
						<string>column</string>
						<string>column-reverse</string>
						<string>compact</string>
						<string>condensed</string>
						<string>contain</string>
						<string>content</string>
						<string>content-box</string>
						<string>context-menu</string>
						<string>copy</string>
						<string>coral</string>
						<string>cornflowerblue</string>
						<string>cornsilk</string>
						<string>courier</string>
						<string>cover</string>
						<string>crimson</string>
						<string>crispEdges</string>
						<string>crisp-edges</string>
						<string>crop</string>
						<string>cross</string>
						<string>crosshair</string>
						<string>cubic-bezier</string>
						<string>currentcolor</string>
						<string>cursive</string>
						<string>cyan</string>
						<string>dark</string>
						<string>darkblue</string>
						<string>darkcyan</string>
						<string>darkgoldenrod</string>
						<string>darkgray</string>
						<string>darkgreen</string>
						<string>darkgrey</string>
						<string>darkkhaki</string>
						<string>darkmagenta</string>
						<string>darkolivegreen</string>
						<string>darkorange</string>
						<string>darkorchid</string>
						<string>darkred</string>
						<string>darksalmon</string>
						<string>darkseagreen</string>
						<string>darkslateblue</string>
						<string>darkslategray</string>
						<string>darkslategrey</string>
						<string>darkturquoise</string>
						<string>darkviolet</string>
						<string>dashed</string>
						<string>decimal-leading-zero</string>
						<string>decimal</string>
						<string>deeppink</string>
						<string>deepskyblue</string>
						<string>default</string>
						<string>destination-atop</string>
						<string>destination-in</string>
						<string>destination-out</string>
						<string>destination-over</string>
						<string>device-aspect-ratio</string>
						<!--<string>device-cmyk</string>-->
						<string>device-width</string>
						<string>device-height</string>
						<string>dimgray</string>
						<string>dimgrey</string>
						<string>disc</string>
						<string>discard</string>
						<string>dodgerblue</string>
						<string>dotted</string>
						<string>double</string>
						<string>down</string>
						<string>e-resize</string>
						<string>ease</string>
						<regex>(?&lt;![\d\w.\-#@\$])(ease-[\w-]+)</regex>
						<string>element</string>
						<string>ellipse cover</string>
						<string>ellipsis</string>
						<string>embed</string>
						<string>end</string>
						<string>evenodd</string>
						<string>ew-reize</string>
						<string>expanded</string>
						<string>extra-condensed</string>
						<string>extra-expanded</string>
						<string>fantasy</string>
						<string>farthest-side</string>
						<string>farthest-corner</string>
						<string>fast</string>
						<string>fill</string>
						<string>firebrick</string>
						<string>fixed</string>
						<string>fixedsys</string>
						<string>flat</string>
						<string>flex</string>
						<string>flex-box</string>
						<string>flex-end</string>
						<string>flex-start</string>
						<string>floralwhite</string>
						<string>font-size</string>
						<string>font-weight</string>
						<string>forestgreen</string>
						<string>format</string>
						<string>forwards</string>
						<string>from</string>
						<string>fuchsia</string>
						<string>gadget</string>
						<string>gainsboro</string>
						<string>geneva</string>
						<string>geometricPrecision</string>
						<string>georgia</string>
						<string>georgian</string>
						<string>ghostwhite</string>
						<string>gold</string>
						<string>goldenrod</string>
						<string>gray</string>
						<string>graytext</string>
						<string>green</string>
						<string>greenyellow</string>
						<string>grey</string>
						<string>grid</string>
						<string>groove</string>
						<string>hand</string>
						<string>hanging</string>
						<string>hebrew</string>
						<string>help</string>
						<string>helvetica</string>
						<string>height</string>
						<string>hidden</string>
						<string>hide</string>
						<string>higher</string>
						<string>highlight</string>
						<string>highlighttext</string>
						<string>hiragana-iroha</string>
						<string>hiragana</string>
						<string>honeydew</string>
						<string>horizontal</string>
						<string>hotpink</string>
						<!--<string>hsl</string>
						<string>hsla</string>-->
						<string>icon</string>
						<string>ideographic</string>
						<string>ignore</string>
						<string>impact</string>
						<string>inactiveborder</string>
						<string>inactivecaption</string>
						<string>inactivecaptiontext</string>
						<string>indianred</string>
						<string>indigo</string>
						<string>infinite</string>
						<string>infobackground</string>
						<string>infotext</string>
						<string>inherit</string>
						<string>initial</string>
						<string>inline</string>
						<regex>(?&lt;![\d\w.\-#@\$])(inline-\w+)</regex>
						<string>inset</string>
						<string>inside</string>
						<string>intrinsic</string>
						<string>invert</string>
						<string>italic</string>
						<string>ivory</string>
						<string>justify</string>
						<string>katakana-iroha</string>
						<string>katakana</string>
						<string>keep-all</string>
						<string>khaki</string>
						<string>konq-center</string>
						<string>landscape</string>
						<string>large</string>
						<string>larger</string>
						<string>lavender</string>
						<string>lavenderblush</string>
						<string>lawngreen</string>
						<string>left</string>
						<string>lemonchiffon</string>
						<string>letter-spacing</string>
						<string>level</string>
						<string>light</string>
						<string>lightblue</string>
						<string>lightcoral</string>
						<string>lightcyan</string>
						<string>lighter</string>
						<string>lightgoldenrodyellow</string>
						<string>lightgray</string>
						<string>lightgreen</string>
						<string>lightgrey</string>
						<string>lightpink</string>
						<string>lightsalmon</string>
						<string>lightseagreen</string>
						<string>lightskyblue</string>
						<string>lightslategray</string>
						<string>lightslategrey</string>
						<string>lightsteelblue</string>
						<string>lightyellow</string>
						<string>lime</string>
						<string>limegreen</string>
						<string>line-height</string>
						<string>line-through</string>
						<string>linear</string>
						<string>linearRGB</string>
						<string>linear-gradient</string>                  	
						<string>linen</string>
						<string>lines</string>
						<string>list-item</string>
						<string>listbox</string>
						<string>listitem</string>
						<string>local</string>
						<string>logical</string>
						<string>loose</string>
						<string>loud</string>
						<string>lower-alpha</string>
						<string>lower-greek</string>
						<string>lower-latin</string>
						<string>lower-roman</string>
						<string>lower</string>
						<string>lowercase</string>
						<string>ltr</string>
						<string>lr</string>
						<string>lr-tb</string>
						<string>magenta</string>
						<string>margin</string>
						<regex>(?&lt;![\d\w.\-#@\$])(margin-\w+)</regex>
						<string>marker</string>
						<string>maroon</string>
						<string>match</string>
						<string>mathematical</string>
						<string>matrix</string>
						<string>matrix3d</string>
						<string>max-height</string>
						<string>max-width</string>
						<string>max-resolution</string>
						<string>medium</string>
						<string>mediumaquamarine</string>
						<string>mediumblue</string>
						<string>mediumorchid</string>
						<string>mediumpurple</string>
						<string>mediumseagreen</string>
						<string>mediumslateblue</string>
						<string>mediumspringgreen</string>
						<string>mediumturquoise</string>
						<string>mediumvioletred</string>
						<string>menu</string>
						<string>menulist-button</string>
						<string>menulist-text</string>
						<string>menulist-textfield</string>
						<string>menulist</string>
						<string>menutext</string>
						<string>message-box</string>
						<string>middle</string>
						<string>midnightblue</string>
						<string>min-height</string>
						<string>min-intrinsic</string>
						<string>min-resolution</string>
						<string>min-width</string>
						<string>mintcream</string>
						<string>mistyrose</string>
						<string>miter</string>
						<string>mix</string>
						<string>moccasin</string>
						<string>monaco</string>
						<string>monochrome</string>
						<string>monospace</string>
						<string>move</string>
						<string>n-resize</string>
						<string>narrower</string>
						<string>navajowhite</string>
						<string>navy</string>
						<string>ne-resize</string>
						<string>nearest-neighbor</string>
						<string>nesw-resize</string>
						<string>new</string>
						<string>never</string>
						<string>no-change</string>
						<string>no-close-quote</string>
						<string>no-drop</string>
						<string>no-open-quote</string>
						<string>no-repeat</string>
						<string>none</string>
						<string>nonzero</string>
						<string>normal</string>
						<string>not-allowed</string>
						<string>nowrap</string>
						<string>ns-resize</string>
						<string>nw-resize</string>
						<string>nwse-resize</string>
						<string>oblique</string>
						<string>oldlace</string>
						<string>olive</string>
						<string>olivedrab</string>
						<string>opacity</string>
						<string>open-quote</string>
						<string>optimizelegibility</string>
						<string>optimizeSpeed</string>
						<string>optimizeQuality</string>
						<string>orange</string>
						<string>orangered</string>
						<string>orchid</string>
						<string>orientation</string>
						<string>outset</string>
						<string>outside</string>
						<regex>(?&lt;![\d\w.\-#@\$])(o(?:utline)-\w+)</regex>
						<string>overlay</string>
						<string>overline</string>
						<regex>(?&lt;![\d\w.\-#@\$])(p(?:adding)(?:-\w+)*)</regex>
						<string>painted</string>
						<string>palatino</string>
						<string>palegoldenrod</string>
						<string>palegreen</string>
						<string>paleturquoise</string>
						<string>palevioletred</string>
						<string>papayawhip</string>
						<string>paused</string>
						<string>peachpuff</string>
						<string>peru</string>
						<string>pink</string>
						<string>pixelated</string>
						<string>plum</string>
						<string>plus-darker</string>
						<string>plus-lighter</string>
						<string>pointer</string>
						<string>portrait</string>
						<string>powderblue</string>
						<string>pre</string>
						<string>pre-line</string>
						<string>pre-wrap</string>
						<string>preserve-3d</string>
						<string>progress</string>
						<string>purple</string>
						<string>push-button</string>
						<string>radial</string>
						<string>radial-gradient</string>
						<string>radio</string>
						<string>read-only</string>
						<string>read-write-plaintext-only</string>
						<string>read-write</string>
						<string>red</string>
						<string>relative</string>
						<string>repeat-x</string>
						<string>repeat-y</string>
						<string>repeat</string>
						<string>repeating-linear-gradient</string>
						<string>repeating-radial-gradient</string>
						<string>reset-size</string>
						<string>resolution</string>
						<string>reverse</string>
						<!--<string>rgb</string>
						<string>rgba</string>-->
						<string>ridge</string>
						<string>right</string>
						<string>rl</string>
						<string>rl-tb</string>
						<string>rosybrown</string>
						<string>rotate</string>
						<string>rotate3d</string>
						<string>rotatex</string>
						<string>rotatey</string>
						<string>rotatez</string>
						<string>round</string>
						<string>row</string>
						<string>row-resize</string>
						<string>row-reverse</string>
						<string>royalblue</string>
						<string>rtl</string>
						<string>run-in</string>
						<string>running</string>
						<string>s-resize</string>
						<string>saddlebrown</string>
						<string>salmon</string>
						<string>sand</string>
						<string>sandybrown</string>
						<string>sans-serif</string>
						<string>scale</string>
						<string>scale3d</string>
						<string>scalex</string>
						<string>scaley</string>
						<string>scalez</string>
						<string>scan</string>
						<string>scroll</string>
						<string>scrollbar</string>
						<string>scrollbarbutton-down</string>
						<string>scrollbarbutton-left</string>
						<string>scrollbarbutton-right</string>
						<string>scrollbarbutton-up</string>
						<string>scrollbargripper-horizontal</string>
						<string>scrollbargripper-vertical</string>
						<string>scrollbarthumb-horizontal</string>
						<string>scrollbarthumb-vertical</string>
						<string>scrollbartrack-horizontal</string>
						<string>scrollbartrack-vertical</string>
						<string>se-resize</string>
						<string>seagreen</string>
						<string>searchfield-cancel-button</string>
						<string>searchfield-decoration</string>
						<string>searchfield-results-button</string>
						<string>searchfield-results-decoration</string>
						<string>searchfield</string>
						<string>seashell</string>
						<string>semi-condensed</string>
						<string>semi-expanded</string>
						<string>separate</string>
						<string>serif</string>
						<string>show</string>
						<string>sienna</string>
						<string>silver</string>
						<string>skew</string>
						<string>skewx</string>
						<string>skewy</string>
						<string>skewz</string>
						<string>skia</string>
						<string>skyblue</string>
						<string>slateblue</string>
						<string>slategray</string>
						<string>slategrey</string>
						<string>slide</string>
						<string>slider-horizontal</string>
						<string>slider-vertical</string>
						<string>sliderthumb-horizontal</string>
						<string>sliderthumb-vertical</string>
						<string>slow</string>
						<string>small-caps</string>
						<string>small-caption</string>
						<string>small</string>
						<string>smaller</string>
						<string>snow</string>
						<string>solid</string>
						<string>source-atop</string>
						<string>source-in</string>
						<string>source-out</string>
						<string>source-over</string>
						<string>space</string>
						<string>space-between</string>
						<string>space-around</string>
						<string>springgreen</string>
						<string>square-button</string>
						<string>square</string>
						<string>sRGB</string>
						<string>start</string>
						<string>static-position</string>
						<string>static</string>
						<string>status-bar</string>
						<string>steelblue</string>
						<string>stretch</string>
						<string>stroke</string>
						<string>sub</string>
						<string>super</string>
						<string>sw-resize</string>
						<string>system</string>
						<string>table-caption</string>
						<string>table-cell</string>
						<string>table-column-group</string>
						<string>table-column</string>
						<string>table-footer-group</string>
						<string>table-header-group</string>
						<string>table-row-group</string>
						<string>table-row</string>
						<string>table</string>
						<string>tahoma</string>
						<string>tan</string>
						<string>tb</string>
						<string>teal</string>
						<string>techno</string>
						<string>terminal</string>
						<string>text</string>
						<regex>(?&lt;![\d\w.\-#@\$])(text-[\w-]+)</regex>
						<string>textarea</string>
						<string>textfield</string>
						<string>textile</string>
						<string>thick</string>
						<string>thin</string>
						<string>thistle</string>
						<string>threeddarkshadow</string>
						<string>threedface</string>
						<string>threedhighlight</string>
						<string>threedlightshadow</string>
						<string>threedshadow</string>
						<string>times</string>
						<string>to</string>
						<string>tomato</string>
						<string>top</string>
						<string>translate</string>
						<string>translate3d</string>
						<string>translatex</string>
						<string>translatey</string>
						<string>translatez</string>
						<string>transparent</string>
						<string>turquoise</string>
						<string>ultra-condensed</string>
						<string>ultra-expanded</string>
						<string>underline</string>
						<string>up</string>
						<string>upper-alpha</string>
						<string>upper-latin</string>
						<string>upper-roman</string>
						<string>uppercase</string>
						<string>url</string>
						<string>use-script</string>
						<string>verdana</string>
						<regex>(?&lt;![\d\w.\-#@\$])(vertical(?:[-\w])*)</regex>
						<string>violet</string>
						<string>visible</string>
						<regex>(?&lt;![\d\w.\-#@\$])(visible-\w+)</regex>
						<string>visibility</string>
						<string>visual</string>
						<string>w-resize</string>
						<string>wrap</string>
						<string>wrap-reverse</string>
						<string>wait</string>
						<string>wheat</string>
						<string>white</string>
						<string>whitesmoke</string>
						<string>wider</string>
						<string>width</string>
						<string>window</string>
						<string>windowframe</string>
						<string>windowtext</string>
						<string>word-spacing</string>
						<string>x-large</string>
						<string>x-small</string>
						<string>xor</string>
						<string>xx-large</string>
						<string>xx-small</string>
						<string>yellow</string>
						<string>yellowgreen</string>
						<string>z-index</string>						
                    </keywords>

                   	<import state="Digits and Colors" keywords-only="yes" />
                    <state-link state="AutodocComment"/>
                    <state-link state="Comment"/>
                    <state-link state="String"/>
                    <state-link state="SingleString"/>
                </state>
                 <!-- #18433
                <state-link state="AutodocComment"/>
                <state-link state="Comment"/>
                <state-link state="String"/>
                <state-link state="SingleString"/>
                --> 
                <import />
            </state>
           
           	<!-- 
            <state id="Rules" scope="style.at-rule">
                <begin>
				    <string>@</string>
					<autoend><regex>\s</regex></autoend>
                </begin>
                <end>
                    <regex>\s|(?:.|[\r\n])(?=\{)</regex>
                </end>
            </state>
            -->
            
            <state id="AutodocComment" type="comment" foldable="yes" scope="style.comment.block.documentation">
                <begin>
                    <string>/\*"</string>
                    <autoend>"\*/</autoend>
                </begin>
                <end>
                    <regex>"\*/</regex>
                </end>
                <import mode="Base" state="EmailAndURLContainerState" keywords-only="yes"/>
            </state>
            
            <state id="Comment Group" foldable="yes" indent="no" delimiterState="Comment" scope="meta.default">
       			<begin><regex>/\*[ \t]*(?i)@group[ \t]+.*?\*/</regex></begin>
       			<end><regex>/\*[ \t]*(?i)@end[ \t]*\*/</regex></end>
       			<import />
       		</state>
            
            <state id="Comment" type="comment" foldable="yes" scope="style.comment.block">
                <begin>
                    <string>/\*</string>
                    <autoend>\*/</autoend>
                </begin>
                <end>
                    <regex>\*/</regex>
                </end>
                
                <import mode="Base" state="EmailAndURLContainerState" keywords-only="yes"/>
            </state>
            <state id="String" type="string" scope="style.value.string.double">
                <begin>
                    <string>"</string>
                </begin>
                <end>
                    <regex>(?&lt;!\\)(\\\\)*"</regex>
                </end>
            </state>
            <state id="SingleString" type="string" scope="style.value.string.single">
                <begin>
                    <string>'</string>
                </begin>
                <end>
                    <regex>(?&lt;!\\)(\\\\)*'</regex>
                </end>
            </state>
        </default>
    </states>
</syntax>
